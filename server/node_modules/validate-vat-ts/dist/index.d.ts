export interface ViesValidationResponse {
    countryCode: string;
    vatNumber: string;
    requestDate: string;
    valid: boolean;
    name?: string;
    address?: string;
}
export declare class ViesServerError extends Error {
    soapResponse?: string;
    constructor(message?: string, soapResponse?: string);
}
export declare class ViesClientError extends Error {
    message: string;
    soapResponse: string;
    constructor(message: string, soapResponse: string);
}
export declare const VAT_SERVICE_URL: string;
export declare const VAT_TEST_SERVICE_URL: string;
export declare enum CountryCodes {
    Austria = "AT",
    Belgium = "BE",
    Bulgaria = "BG",
    Croatia = "HR",
    Cyprus = "CY",
    CzechRepublic = "CZ",
    Denmark = "DK",
    Estonia = "EE",
    Finland = "FI",
    France = "FR",
    Germany = "DE",
    Greece = "EL",
    Hungary = "HU",
    Ireland = "IE",
    Italy = "IT",
    Latvia = "LV",
    Lithuania = "LT",
    Luxembourg = "LU",
    Malta = "MT",
    Netherlands = "NL",
    Poland = "PL",
    Portugal = "PT",
    Romania = "RO",
    Slovakia = "SK",
    Slovenia = "SI",
    Spain = "ES",
    Sweden = "SE",
    UnitedKingdom = "GB"
}
declare const validateVat: (countryCode: CountryCodes, vatNumber: string, serviceUrl?: string) => Promise<ViesValidationResponse>;
export default validateVat;
